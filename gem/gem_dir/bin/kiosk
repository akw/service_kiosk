#!/usr/bin/env ruby

require 'kiosk'
require 'json'

def gem_dir
  ServiceKiosk::Kiosk.gem_dir
end

def config
  file = File.read('Kioskfile.json')
  JSON.parse file
end

def vagrant_exec(command)
  exec "env KIOSK_GEM_DIR=#{gem_dir} #{command}"
end

case ARGV[0] 
when 'plaza:init', 'init'
  boxes = `env KIOSK_GEM_DIR=#{gem_dir} vagrant box list`
  if(/precise32/m.match boxes)
    puts 'plaza already initialized'
  else
    vagrant_exec 'vagrant box add precise32 http://files.vagrantup.com/precise32.box'
  end

when 'plaza:up', 'up'
  vagrant_exec "vagrant up"

when 'plaza:down', 'down'
  vagrant_exec "vagrant destroy"

when 'plaza:ssh', 'ssh'
  vagrant_exec 'vagrant ssh'

when 'mall:open', 'open'
  vagrant_exec "vagrant ssh -c 'cd /vagrant/mall; /usr/local/bin/rake kiosk:start'"

when 'mall:close', 'close'
  vagrant_exec "vagrant ssh -c 'cd /vagrant/mall; /usr/local/bin/rake kiosk:stop'"

when 'mall:log', 'log'
  vagrant_exec "vagrant ssh -c 'cd /vagrant/mall; /usr/local/bin/rake kiosk:log'"

when 'kiosk:run', 'run'
  env = config['kiosks'][ARGV[1]]['env']
  mall = gem_dir + "/lib/mall.rb"
  dir = Dir.pwd + '/kiosks/' + ARGV[1]
  puts "env: #{env.inspect}"
  puts "mall: #{mall}"
  puts "dir: #{dir}"
  jruby = `which jruby`.strip
  exec(env, "#{jruby} #{mall}", :chdir => dir, :unsetenv_others => true)

when 'create'
  require 'fileutils'
  if ARGV[1]=='mall'
    FileUtils.cp_r gem_dir + "/examples/kiosk_mall", "."

  elsif ARGV[1]=='java-client'
    FileUtils.cp_r gem_dir + "/examples/java-client", "."

  elsif ARGV[1]=='php-client'
    FileUtils.cp_r gem_dir + "/examples/php-client", "."

  end

else
  puts "Usage: $0 {plaza:init|plaza:up|plaza:down|plaza:ssh|mall:open|mall:close|mall:log}"
end

