{
  "name": "yodlee_cached",
  "version": "0.1.0",
  "language": "java",
  "description": "This example application is designed to show how to develop and configure a chained set of kiosks.",

  "settings": {
    "INDEX_TIMEOUT": {
      "description": "Number of seconds before the cached item expires",
      "default": "86400"
    }
  },

  "dependencies": {
    "search": {
      "resource": "ContentServiceSearch",
      "kiosk": ["content_service_search", "*"],
      "description": "Use of a simple substring matching service against names of Content Services from a provider like Yodlee.  Results should map Display Names to ContentService ID  Results should map Display Names to ContentService IDs."
    },

    "mock_indexer": {
      "resource": "ServiceIndexer",
      "kiosk": ["mock_indexer", "*"],
      "description": "A simple mock component for providing a Content Service Index"
    },

    "cache": {
      "resource": "CachedResource",
      "kiosk": ["memory_cache", "*"],
      "description": "An in-memory cache will store the content service index for TIMEOUT seconds"
    },

    "backupcache": {
      "resource": "CachedResource",
      "kiosk": ["memory_cache", "*"],
      "description": "A backup test cache.  Isn't actually used. but to demonstrate two dependencies to one kiosk codebase"
    },

    "indexer": {
      "resource": "ServiceLister",
      "kiosk": ["yodlee", "*"],
      "description": "A module that lists financial institutions from Yodlee.com"
    }

    "lister": {
      "resource": "ServiceLister",
      "kiosk": ["yodlee", "*"],
      "description": "A module that interacts with Yodlee.com for aggregating financial data"
    }
  }
}
